import eventBus from '@/hooks/useEventBus';
export const Select = [
  {
    label: '占位提示',
    tag: 'n-input',
    tagType: 'Input',
    __vModel__: '__config__.placeholder',
    __layout__: {},
    __config__: {
      placeholder: '请输入占位提示',
      clearable: true,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '是否过滤',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.filterable',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
  {
    label: '动态选项',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.tag',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
    __emits__: {
      '__config__.filterable'(val, conf: FormItem) {
        conf.__config__.filterable = val;
      },
    },
  },
  {
    label: '能否清空',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.clearable',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
  {
    label: '是否多选',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.multiple',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
  {
    label: '标签数自适应',
    tag: 'n-checkbox',
    tagType: 'Checkbox',
    hidden: (widget) => {
      const {
        __config__: { multiple },
      } = widget;
      return !!multiple;
    },
    __vModel__: '__config__.maxTagCount',
    __layout__: {},
    __config__: {
      checkedValue: 'responsive',
      uncheckedValue: null,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    __uuid__: '__config__.options',
    __vModel__: '__config__.options',
    label: '添加选项',
    tag: 'WidgetOptions',
    tagType: 'Custom',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
    __emits__: {},
  },
];
export const Cascader = [
  {
    label: '占位提示',
    tag: 'n-input',
    tagType: 'Input',
    __vModel__: '__config__.placeholder',
    __layout__: {},
    __config__: {
      placeholder: '请输入占位提示',
      clearable: true,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '勾选策略',
    tag: 'n-radio-group',
    tagType: 'Radio',
    __vModel__: '__config__.checkStrategy',
    __layout__: {},
    __config__: {
      'default-value': 'all',
    },
    __slot__: {
      default: {
        type: 'button',
        space: {},
        options: [
          { value: 'all', label: '全部' },
          { value: 'parent', label: '父节点' },
          { value: 'child', label: '子节点' },
        ],
      },
    },
    __rules__: [],
  },
  {
    label: '显示路径',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.showPath',
    __layout__: {},
    __config__: {
      'default-value': true,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '是否过滤',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.filterable',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
  {
    label: '能否清空',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.clearable',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
  // 多选
  {
    label: '是否多选',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.multiple',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
  {
    label: '标签数自适应',
    tag: 'n-checkbox',
    tagType: 'Checkbox',
    hidden: (widget) => {
      const {
        __config__: { multiple },
      } = widget;
      return !!multiple;
    },
    __vModel__: '__config__.maxTagCount',
    __layout__: {},
    __config__: {
      checkedValue: 'responsive',
      uncheckedValue: null,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '关联选项',
    tag: 'n-switch',
    tagType: 'Switch',
    hidden: (widget) => {
      const {
        __config__: { multiple },
      } = widget;
      return !!multiple;
    },
    __vModel__: '__config__.cascade',
    __layout__: {},
    __config__: {
      'default-value': true,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    __uuid__: '__config__.options',
    __vModel__: '__config__.options',
    label: '添加选项',
    tag: 'WidgetTreeOptions',
    tagType: 'Custom',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
    __emits__: {},
  },
];
export const Radio = [
  {
    label: '选项样式',
    tag: 'n-radio-group',
    tagType: 'Radio',
    __vModel__: '__slot__.default.type',
    __layout__: {},
    __config__: {
      'default-value': 'radio',
    },
    __slot__: {
      default: {
        type: 'button',
        space: {},
        options: [
          { value: 'radio', label: '默认' },
          { value: 'button', label: '按钮' },
        ],
      },
    },
    __rules__: [],
  },
  {
    __uuid__: '__slot__.default.options',
    __vModel__: '__slot__.default.options',
    label: '添加选项',
    tag: 'WidgetOptions',
    tagType: 'Custom',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
    __emits__: {},
  },
];
export const Checkbox = [
  {
    label: '最大数量',
    tag: 'n-input-number',
    tagType: 'Number',
    __vModel__: '__config__.max',
    __layout__: {},
    __config__: {
      placeholder: '可被勾选的最大数量',
      clearable: true,
      buttonPlacement: 'both',
      min: 1,
      setp: 1,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '最小数量',
    tag: 'n-input-number',
    tagType: 'Number',
    __vModel__: '__config__.min',
    __layout__: {},
    __config__: {
      placeholder: '可被勾选的最小数量',
      clearable: true,
      buttonPlacement: 'both',
      min: 1,
      setp: 1,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    __uuid__: '__slot__.default.options',
    __vModel__: '__slot__.default.options',
    label: '添加选项',
    tag: 'WidgetOptions',
    tagType: 'Custom',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
    __emits__: {},
  },
];
export const Switch = [
  {
    label: '开启描述',
    tag: 'n-input',
    tagType: 'Input',
    __vModel__: '__slot__.checked',
    __layout__: {},
    __config__: {
      placeholder: '请输入开启描述',
      clearable: true,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '关闭描述',
    tag: 'n-input',
    tagType: 'Input',
    __vModel__: '__slot__.unchecked',
    __layout__: {},
    __config__: {
      placeholder: '请输入关闭描述',
      clearable: true,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '是否圆形',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.round',
    __layout__: {},
    __config__: {
      defaultValue: true,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '按钮动画',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.rubberBand',
    __layout__: {},
    __config__: {
      defaultValue: true,
    },
    __slot__: {},
    __rules__: [],
  },
];
export const Slider = [
  {
    label: '最大值',
    tag: 'n-input-number',
    tagType: 'Number',
    __vModel__: '__config__.max',
    __layout__: {},
    __config__: {
      placeholder: '最大值',
      defaultValue: 100,
      buttonPlacement: 'both',
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '最小值',
    tag: 'n-input-number',
    tagType: 'Number',
    __vModel__: '__config__.min',
    __layout__: {},
    __config__: {
      placeholder: '最小值',
      defaultValue: 1,
      buttonPlacement: 'both',
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '步长',
    tag: 'n-input-number',
    tagType: 'Number',
    __vModel__: '__config__.step',
    __layout__: {},
    __config__: {
      placeholder: '步长',
      defaultValue: 1,
      buttonPlacement: 'both',
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '范围选择',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.range',
    __layout__: {},
    __config__: {
      defaultValue: false,
    },
    __slot__: {},
    __rules__: [],
    __emits__: {
      changeDefaultValue(state, conf: FormItem) {
        const { __config__ } = conf;
        const { max, min } = __config__;
        const defaultValue = state ? [min || 0, max || 100] : min;
        __config__.defaultValue = defaultValue;
        //
        eventBus.$emit('slider:range', conf);
      },
    },
  },
];
export const Date = [
  {
    label: '占位提示',
    tag: 'n-input',
    tagType: 'Input',
    __vModel__: '__config__.placeholder',
    __layout__: {},
    __config__: {
      placeholder: '请输入占位提示',
      clearable: true,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '日期类型',
    tag: 'n-select',
    tagType: 'Select',
    __vModel__: '__config__.type',
    __layout__: {},
    __config__: {
      defaultValue: 'date',
      options: [
        { label: '日期时间(datetime)', value: 'datetime' },
        { label: '日(date)', value: 'date' },
        { label: '月(month)', value: 'month' },
        { label: '年(year)', value: 'year' },
        { label: '季度(quarter)', value: 'quarter' },
        // { label: 'daterange', value: 'daterange' },
        // { label: 'datetimerange', value: 'datetimerange' },
        // { label: 'monthrange', value: 'monthrange' },
      ],
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '时间格式',
    tag: 'n-input',
    tagType: 'Input',
    __vModel__: '__config__.valueFormat',
    __layout__: {},
    __config__: {
      placeholder: '例如: yyyy-MM-dd HH:mm:ss',
      clearable: true,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '能否清空',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.clearable',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
  {
    label: '禁用输入框',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.inputReadonly',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
];
export const Time = [
  {
    label: '占位提示',
    tag: 'n-input',
    tagType: 'Input',
    __vModel__: '__config__.placeholder',
    __layout__: {},
    __config__: {
      placeholder: '请输入占位提示',
      clearable: true,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '时间格式',
    tag: 'n-input',
    tagType: 'Input',
    __vModel__: '__config__.valueFormat',
    __layout__: {},
    __config__: {
      placeholder: '例如: HH:mm:ss',
      clearable: true,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '能否清空',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.clearable',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
  {
    label: '禁用输入框',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.inputReadonly',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
];
export const Rate = [
  {
    label: '允许半选',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.allowHalf',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
  {
    label: '前图标',
    tag: 'n-color-picker',
    tagType: 'Color',
    __vModel__: '__config__.color',
    __layout__: {},
    __config__: {
      defaultValue: '#FFCC33',
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '图标个数',
    tag: 'n-input-number',
    tagType: 'Number',
    __vModel__: '__config__.count',
    __layout__: {},
    __config__: {
      defaultValue: 5,
      clearable: true,
      buttonPlacement: 'both',
      min: 1,
      precision: 0,
      setp: 1,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '能否清空',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.clearable',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
  {
    label: '是否只读',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.readonly',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
];
export const Color = [
  {
    label: '展示透明度',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.showAlpha',
    __layout__: {},
    __config__: {
      defaultValue: true,
    },
    __slot__: {},
    __rules__: [],
  },
  {
    label: '展示预览块',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.showPreview',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
  {
    label: '支持颜色格式',
    tag: 'n-checkbox-group',
    tagType: 'Checkbox',
    __vModel__: '__config__.modes',
    __layout__: {},
    __config__: {
      defaultValue: ['rgb', 'hex', 'hsl'],
    },
    __slot__: {
      default: {
        type: 'button',
        space: {},
        options: [
          { label: 'rgb', value: 'rgb' },
          { label: 'hex', value: 'hex' },
          { label: 'hsl', value: 'hsl' },
          { label: 'hsv', value: 'hsv' },
        ],
      },
    },
    __rules__: [],
  },

  {
    label: '能否清空',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.clearable',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
  {
    label: '是否只读',
    tag: 'n-switch',
    tagType: 'Switch',
    __vModel__: '__config__.readonly',
    __layout__: {},
    __config__: {},
    __slot__: {},
    __rules__: [],
  },
];
